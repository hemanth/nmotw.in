<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: templating | NMOTW]]></title>
  <link href="http://nmotw.in//github/public/categories/templating/atom.xml" rel="self"/>
  <link href="http://nmotw.in//github/"/>
  <updated>2018-10-20T14:36:18+05:30</updated>
  <id>http://nmotw.in//github/</id>
  <author>
    <name><![CDATA[Hemanth.HM]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[block.js]]></title>
    <link href="http://nmotw.in//github/block.js/"/>
    <updated>2014-04-24T19:12:16+05:30</updated>
    <id>http://nmotw.in//github/block.js</id>
    <content type="html"><![CDATA[<p><a href="https://www.npmjs.org/package/block">Block.js</a>: Ridiculously simple HTML templating. All it does is replaces "blocks" in your template with a local.</p>

<p>The crux of this module is in these simple lines of code:</p>

<p>```javascript
function replace(string, key, value) {
  return string.replace(</p>

<pre><code>new RegExp('\\{\\{\\s*' + escapeRegExp(key) + '\\s*\\}\\}', 'g'),
value || ''
</code></pre>

<p>  )
}</p>

<p>function escapeRegExp(str) {
  return str.replace(/([.*+?=<sup>!:${}()|[]\/\])/g,</sup> '\$1')
}
```</p>

<p>The API is also pretty simple:</p>

<p>```javascript
var template = Block(html);
//html is a string, and block returns a new templating instance.</p>

<p>template.render(locals);
//locals is an object of "blocks" to replace in the template.
```</p>

<p><strong>Simple Example:</strong></p>

<p>```javascript
var block = require('block')
, fs = require('fs')
, tmpl = fs.readFileSync('block.html', 'utf-8')
, data = block(tmpl).render( {content: '<div class="inner"></div>'});</p>

<p>console.log(data);
```</p>

<p><strong>GIF GTW!:</strong>
<img src="/images/block.js/block.js.gif" alt="block" /></p>

<p>Hope you liked this simple HTML templating engine! Go ahead and <code>.replace('', string)</code></p>

<p>Thanks to the author <a href="http://jongleberry.com">Jonathan Ong</a>.</p>
]]></content>
  </entry>
  
</feed>
